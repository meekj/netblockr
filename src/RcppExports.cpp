// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// nbBuildNetblockTable
XPtr< nbTable > nbBuildNetblockTable(CharacterVector BaseAndMask, CharacterVector IPaddrStrings, IntegerVector Mask, CharacterVector Description);
RcppExport SEXP _netblockr_nbBuildNetblockTable(SEXP BaseAndMaskSEXP, SEXP IPaddrStringsSEXP, SEXP MaskSEXP, SEXP DescriptionSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type BaseAndMask(BaseAndMaskSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type IPaddrStrings(IPaddrStringsSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type Mask(MaskSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type Description(DescriptionSEXP);
    rcpp_result_gen = Rcpp::wrap(nbBuildNetblockTable(BaseAndMask, IPaddrStrings, Mask, Description));
    return rcpp_result_gen;
END_RCPP
}
// nbSetMaskOrder
void nbSetMaskOrder(XPtr< nbTable > nbt, IntegerVector Masks);
RcppExport SEXP _netblockr_nbSetMaskOrder(SEXP nbtSEXP, SEXP MasksSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< XPtr< nbTable > >::type nbt(nbtSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type Masks(MasksSEXP);
    nbSetMaskOrder(nbt, Masks);
    return R_NilValue;
END_RCPP
}
// nbGetNetblockTable
DataFrame nbGetNetblockTable(XPtr< nbTable > nbt);
RcppExport SEXP _netblockr_nbGetNetblockTable(SEXP nbtSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< XPtr< nbTable > >::type nbt(nbtSEXP);
    rcpp_result_gen = Rcpp::wrap(nbGetNetblockTable(nbt));
    return rcpp_result_gen;
END_RCPP
}
// nbLookupIPaddrs
DataFrame nbLookupIPaddrs(XPtr< nbTable > nbt, CharacterVector IPaddrStrings);
RcppExport SEXP _netblockr_nbLookupIPaddrs(SEXP nbtSEXP, SEXP IPaddrStringsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< XPtr< nbTable > >::type nbt(nbtSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type IPaddrStrings(IPaddrStringsSEXP);
    rcpp_result_gen = Rcpp::wrap(nbLookupIPaddrs(nbt, IPaddrStrings));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_netblockr_nbBuildNetblockTable", (DL_FUNC) &_netblockr_nbBuildNetblockTable, 4},
    {"_netblockr_nbSetMaskOrder", (DL_FUNC) &_netblockr_nbSetMaskOrder, 2},
    {"_netblockr_nbGetNetblockTable", (DL_FUNC) &_netblockr_nbGetNetblockTable, 1},
    {"_netblockr_nbLookupIPaddrs", (DL_FUNC) &_netblockr_nbLookupIPaddrs, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_netblockr(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
